/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Add and configure individual slides for the carousel.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroSlide".
 */
export type HeroSlide =
  | {
      image?: (number | null) | Media;
      /**
       * How the image should be resized to fit the container.
       */
      imageFit?: ('contain' | 'cover' | 'fill') | null;
      headerTitle?: string | null;
      bodyTitle?: string | null;
      bodyText?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      button?: {
        elemId?: string | null;
        text?: string | null;
        /**
         * Use "/" prefix for internal links (e.g., "/about"). Use full URLs for external links (e.g., "https://example.com").
         */
        href?: string | null;
        new_tab?: boolean | null;
        variant?: ('link' | 'btn-primary' | 'btn-secondary' | 'btn-outline' | 'btn-outline-primary' | 'btn') | null;
      };
      id?: string | null;
    }[]
  | null;
/**
 * Set permissions for each collection
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RoleCollectionPermissions".
 */
export type RoleCollectionPermissions =
  | {
      /**
       * Collection slug (e.g., "pages", "posts")
       */
      collection: string;
      /**
       * Allow creating new items in this collection
       */
      canCreate?: boolean | null;
      /**
       * Allow viewing items in this collection
       */
      canRead?: boolean | null;
      /**
       * Allow editing items in this collection
       */
      canUpdate?: boolean | null;
      /**
       * Allow deleting items in this collection
       */
      canDelete?: boolean | null;
      id?: string | null;
    }[]
  | null;
/**
 * Set permissions for each global
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RoleGlobalPermissions".
 */
export type RoleGlobalPermissions =
  | {
      /**
       * Global slug (e.g., "settings", "theme")
       */
      global?: string | null;
      /**
       * Allow viewing this global
       */
      canRead?: boolean | null;
      /**
       * Allow editing this global
       */
      canUpdate?: boolean | null;
      id?: string | null;
    }[]
  | null;
/**
 * Define different themes for your website
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ThemeConfig".
 */
export type ThemeConfig =
  | {
      active: boolean;
      name: string;
      css?: string | null;
      js?: string | null;
      id?: string | null;
    }[]
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    roles: Role;
    analytics: Analytics;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    roles: RolesSelect<false> | RolesSelect<true>;
    analytics: AnalyticsSelect<false> | AnalyticsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    theme: Theme;
    settings: Setting;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    theme: ThemeSelect<false> | ThemeSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
  };
  locale: 'en' | 'ar';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: Hero;
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock | SectionBlock)[];
  elemId?: string | null;
  /**
   * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
   */
  css_name?: string | null;
  css_style?: string | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * This is the full slug of the page, including the category slug. It is used for SEO purposes and should not be changed.
   */
  fullSlug?: string | null;
  category?: (number | null) | Category;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Configure the hero section for this page, including carousel options.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero".
 */
export interface Hero {
  main: {
    type: 'none' | 'carousel';
    settings?: CarouselSettings;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    media?: (number | null) | Media;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
}
/**
 * Choose slide should be displayed.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselSettings".
 */
export interface CarouselSettings {
  /**
   * Customize the behavior of the carousel.
   */
  carouselSettings?: {
    autoplay?: boolean | null;
    loop?: boolean | null;
    /**
     * Add a custom class name to the carousel.
     */
    className?: string | null;
  };
  /**
   * Choose slide should be displayed.
   */
  layout?: 'feature' | null;
  slides?: HeroSlide;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  role: number | Role;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Manage user roles and permissions
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles".
 */
export interface Role {
  id: number;
  /**
   * Display name for this role
   */
  name: string;
  /**
   * Unique identifier for this role (e.g., "admin", "editor", "contributor")
   */
  slug: string;
  /**
   * Brief description of what this role is for
   */
  description?: string | null;
  collections?: {
    permissions?: RoleCollectionPermissions;
  };
  globals?: {
    permissions?: RoleGlobalPermissions;
  };
  /**
   * Admin roles bypass all permission checks (use carefully)
   */
  isAdmin?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          items?:
            | {
                URL?: string | null;
                label?: string | null;
                id?: string | null;
              }[]
            | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          items?:
            | {
                URL?: string | null;
                label?: string | null;
                id?: string | null;
              }[]
            | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            /**
             * Select an icon to display next to this field (frontend implementation required).
             */
            icon?:
              | ('' | 'person' | 'email' | 'phone' | 'message' | 'number' | 'select' | 'checkbox' | 'location')
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            /**
             * Select an icon to display next to this field (frontend implementation required).
             */
            icon?:
              | ('' | 'person' | 'email' | 'phone' | 'message' | 'number' | 'select' | 'checkbox' | 'location')
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            /**
             * Select an icon to display next to this field (frontend implementation required).
             */
            icon?:
              | ('' | 'person' | 'email' | 'phone' | 'message' | 'number' | 'select' | 'checkbox' | 'location')
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            /**
             * Select an icon to display next to this field (frontend implementation required).
             */
            icon?:
              | ('' | 'person' | 'email' | 'phone' | 'message' | 'number' | 'select' | 'checkbox' | 'location')
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            /**
             * Select an icon to display next to this field (frontend implementation required).
             */
            icon?:
              | ('' | 'person' | 'email' | 'phone' | 'message' | 'number' | 'select' | 'checkbox' | 'location')
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            /**
             * Select an icon to display next to this field (frontend implementation required).
             */
            icon?:
              | ('' | 'person' | 'email' | 'phone' | 'message' | 'number' | 'select' | 'checkbox' | 'location')
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionBlock".
 */
export interface SectionBlock {
  components: {
    components: ContainerBlock[];
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContainerBlock".
 */
export interface ContainerBlock {
  components?: {
    components?:
      | (
          | HeaderBlock
          | TextBlock
          | LinkBlock
          | MultiMediaBlock
          | EmbedBlock
          | CardWithBackgroundBlock
          | CardInlineImageBlock
          | CardRowBlock
          | CarouselBlock
          | FormBlock
        )[]
      | null;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'container';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderBlock".
 */
export interface HeaderBlock {
  main: {
    text: string;
    variant: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'header';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBlock".
 */
export interface TextBlock {
  main: {
    text: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkBlock".
 */
export interface LinkBlock {
  main?: {
    text?: string | null;
    /**
     * Use "/" prefix for internal links (e.g., "/about"). Use full URLs for external links (e.g., "https://example.com").
     */
    href?: string | null;
    new_tab?: boolean | null;
    variant?: ('link' | 'btn-primary' | 'btn-secondary' | 'btn-outline' | 'btn-outline-primary' | 'btn') | null;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'link';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MultiMediaBlock".
 */
export interface MultiMediaBlock {
  main: {
    image: number | Media;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'multimedia';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EmbedBlock".
 */
export interface EmbedBlock {
  main: {
    html: string;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'embed';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardWithBackgroundBlock".
 */
export interface CardWithBackgroundBlock {
  main?: {
    image?: (number | null) | Media;
    /**
     * How the image should be resized to fit the container.
     */
    imageFit?: ('contain' | 'cover' | 'fill') | null;
    headerTitle?: string | null;
    bodyTitle?: string | null;
    bodyText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    button?: {
      elemId?: string | null;
      text?: string | null;
      /**
       * Use "/" prefix for internal links (e.g., "/about"). Use full URLs for external links (e.g., "https://example.com").
       */
      href?: string | null;
      new_tab?: boolean | null;
      variant?: ('link' | 'btn-primary' | 'btn-secondary' | 'btn-outline' | 'btn-outline-primary' | 'btn') | null;
    };
    id?: string | null;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'card-with-background';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardInlineImageBlock".
 */
export interface CardInlineImageBlock {
  main?: {
    image?: (number | null) | Media;
    /**
     * How the image should be resized to fit the container.
     */
    imageFit?: ('contain' | 'cover' | 'fill') | null;
    headerTitle?: string | null;
    bodyTitle?: string | null;
    bodyText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    button?: {
      elemId?: string | null;
      text?: string | null;
      /**
       * Use "/" prefix for internal links (e.g., "/about"). Use full URLs for external links (e.g., "https://example.com").
       */
      href?: string | null;
      new_tab?: boolean | null;
      variant?: ('link' | 'btn-primary' | 'btn-secondary' | 'btn-outline' | 'btn-outline-primary' | 'btn') | null;
    };
    id?: string | null;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'card-inline-image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardRowBlock".
 */
export interface CardRowBlock {
  main?: {
    image?: (number | null) | Media;
    /**
     * How the image should be resized to fit the container.
     */
    imageFit?: ('contain' | 'cover' | 'fill') | null;
    headerTitle?: string | null;
    bodyTitle?: string | null;
    bodyText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    button?: {
      elemId?: string | null;
      text?: string | null;
      /**
       * Use "/" prefix for internal links (e.g., "/about"). Use full URLs for external links (e.g., "https://example.com").
       */
      href?: string | null;
      new_tab?: boolean | null;
      variant?: ('link' | 'btn-primary' | 'btn-secondary' | 'btn-outline' | 'btn-outline-primary' | 'btn') | null;
    };
    id?: string | null;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'card-row';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock".
 */
export interface CarouselBlock {
  main?: {
    /**
     * Customize the behavior of the carousel.
     */
    carouselSettings?: {
      slidesPerView?: number | null;
      centeredSlides?: boolean | null;
      autoplay?: boolean | null;
      loop?: boolean | null;
      showArrows?: boolean | null;
      showDots?: boolean | null;
      /**
       * Add a custom class name to the carousel.
       */
      className?: string | null;
    };
    /**
     * Choose slide should be displayed.
     */
    layout?: ('card-row' | 'card-inline-image' | 'card-with-background') | null;
    slides?: HeroSlide;
  };
  styles?: {
    elemId?: string | null;
    /**
     * Add CSS class names to the element. These will be added to the element as a class attribute. You can use this to add custom styles to the element.
     */
    css_name?: string | null;
    css_style?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'carousel-block';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "analytics".
 */
export interface Analytics {
  id: number;
  ip?: string | null;
  email?: string | null;
  phone?: string | null;
  deviceType: 'desktop' | 'mobile' | 'tablet';
  pagePath: string;
  referrer?: string | null;
  clickedUrl?: string | null;
  eventType: 'page_view' | 'click' | 'form_submission' | 'error' | 'unknown';
  timestamp: string;
  payload?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'roles';
        value: number | Role;
      } | null)
    | ({
        relationTo: 'analytics';
        value: number | Analytics;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?: T | HeroSelect<T>;
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        section?: T | SectionBlockSelect<T>;
      };
  elemId?: T;
  css_name?: T;
  css_style?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  fullSlug?: T;
  category?: T;
  createdBy?: T;
  updatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero_select".
 */
export interface HeroSelect<T extends boolean = true> {
  main?:
    | T
    | {
        type?: T;
        settings?: T | CarouselSettingsSelect<T>;
        richText?: T;
        media?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselSettings_select".
 */
export interface CarouselSettingsSelect<T extends boolean = true> {
  carouselSettings?:
    | T
    | {
        autoplay?: T;
        loop?: T;
        className?: T;
      };
  layout?: T;
  slides?: T | HeroSlideSelect<T>;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroSlide_select".
 */
export interface HeroSlideSelect<T extends boolean = true> {
  image?: T;
  imageFit?: T;
  headerTitle?: T;
  bodyTitle?: T;
  bodyText?: T;
  button?:
    | T
    | {
        elemId?: T;
        text?: T;
        href?: T;
        new_tab?: T;
        variant?: T;
      };
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              items?:
                | T
                | {
                    URL?: T;
                    label?: T;
                    id?: T;
                  };
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              items?:
                | T
                | {
                    URL?: T;
                    label?: T;
                    id?: T;
                  };
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionBlock_select".
 */
export interface SectionBlockSelect<T extends boolean = true> {
  components?:
    | T
    | {
        components?:
          | T
          | {
              container?: T | ContainerBlockSelect<T>;
            };
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContainerBlock_select".
 */
export interface ContainerBlockSelect<T extends boolean = true> {
  components?:
    | T
    | {
        components?:
          | T
          | {
              header?: T | HeaderBlockSelect<T>;
              text?: T | TextBlockSelect<T>;
              link?: T | LinkBlockSelect<T>;
              multimedia?: T | MultiMediaBlockSelect<T>;
              embed?: T | EmbedBlockSelect<T>;
              'card-with-background'?: T | CardWithBackgroundBlockSelect<T>;
              'card-inline-image'?: T | CardInlineImageBlockSelect<T>;
              'card-row'?: T | CardRowBlockSelect<T>;
              'carousel-block'?: T | CarouselBlockSelect<T>;
              formBlock?: T | FormBlockSelect<T>;
            };
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderBlock_select".
 */
export interface HeaderBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        text?: T;
        variant?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBlock_select".
 */
export interface TextBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        text?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkBlock_select".
 */
export interface LinkBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        text?: T;
        href?: T;
        new_tab?: T;
        variant?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MultiMediaBlock_select".
 */
export interface MultiMediaBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        image?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EmbedBlock_select".
 */
export interface EmbedBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        html?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardWithBackgroundBlock_select".
 */
export interface CardWithBackgroundBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        image?: T;
        imageFit?: T;
        headerTitle?: T;
        bodyTitle?: T;
        bodyText?: T;
        button?:
          | T
          | {
              elemId?: T;
              text?: T;
              href?: T;
              new_tab?: T;
              variant?: T;
            };
        id?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardInlineImageBlock_select".
 */
export interface CardInlineImageBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        image?: T;
        imageFit?: T;
        headerTitle?: T;
        bodyTitle?: T;
        bodyText?: T;
        button?:
          | T
          | {
              elemId?: T;
              text?: T;
              href?: T;
              new_tab?: T;
              variant?: T;
            };
        id?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardRowBlock_select".
 */
export interface CardRowBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        image?: T;
        imageFit?: T;
        headerTitle?: T;
        bodyTitle?: T;
        bodyText?: T;
        button?:
          | T
          | {
              elemId?: T;
              text?: T;
              href?: T;
              new_tab?: T;
              variant?: T;
            };
        id?: T;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock_select".
 */
export interface CarouselBlockSelect<T extends boolean = true> {
  main?:
    | T
    | {
        carouselSettings?:
          | T
          | {
              slidesPerView?: T;
              centeredSlides?: T;
              autoplay?: T;
              loop?: T;
              showArrows?: T;
              showDots?: T;
              className?: T;
            };
        layout?: T;
        slides?: T | HeroSlideSelect<T>;
      };
  styles?:
    | T
    | {
        elemId?: T;
        css_name?: T;
        css_style?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  createdBy?: T;
  updatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles_select".
 */
export interface RolesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  collections?:
    | T
    | {
        permissions?: T | RoleCollectionPermissionsSelect<T>;
      };
  globals?:
    | T
    | {
        permissions?: T | RoleGlobalPermissionsSelect<T>;
      };
  isAdmin?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RoleCollectionPermissions_select".
 */
export interface RoleCollectionPermissionsSelect<T extends boolean = true> {
  collection?: T;
  canCreate?: T;
  canRead?: T;
  canUpdate?: T;
  canDelete?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RoleGlobalPermissions_select".
 */
export interface RoleGlobalPermissionsSelect<T extends boolean = true> {
  global?: T;
  canRead?: T;
  canUpdate?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "analytics_select".
 */
export interface AnalyticsSelect<T extends boolean = true> {
  ip?: T;
  email?: T;
  phone?: T;
  deviceType?: T;
  pagePath?: T;
  referrer?: T;
  clickedUrl?: T;
  eventType?: T;
  timestamp?: T;
  payload?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              icon?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              icon?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              icon?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              icon?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              icon?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              icon?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom' | 'group') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          items?:
            | {
                URL?: string | null;
                label?: string | null;
                id?: string | null;
              }[]
            | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom' | 'group') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          items?:
            | {
                URL?: string | null;
                label?: string | null;
                id?: string | null;
              }[]
            | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Copyright text to be dispalyed at the bottom of the footer
   */
  copyright?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme".
 */
export interface Theme {
  id: number;
  themes?: ThemeConfig;
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  favicon?: (number | null) | Media;
  logo?: (number | null) | Media;
  localeSwitch?: {
    enableLocaleHeader?: boolean | null;
    enableLocaleFooter?: boolean | null;
  };
  siteName?: string | null;
  /**
   * Select the homepage for your website
   */
  homepage?: (number | null) | Page;
  contact?: {
    email?: string | null;
    phone?: string | null;
    fax?: string | null;
  };
  address?: {
    full_address?: string | null;
  };
  socialMedia?: {
    facebook?: string | null;
    twitter?: string | null;
    instagram?: string | null;
    linkedin?: string | null;
    youtube?: string | null;
    pinterest?: string | null;
    tiktok?: string | null;
    whatsapp?: string | null;
  };
  createdBy?: (number | null) | User;
  updatedBy?: (number | null) | User;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              items?:
                | T
                | {
                    URL?: T;
                    label?: T;
                    id?: T;
                  };
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              items?:
                | T
                | {
                    URL?: T;
                    label?: T;
                    id?: T;
                  };
              label?: T;
            };
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme_select".
 */
export interface ThemeSelect<T extends boolean = true> {
  themes?: T | ThemeConfigSelect<T>;
  createdBy?: T;
  updatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ThemeConfig_select".
 */
export interface ThemeConfigSelect<T extends boolean = true> {
  active?: T;
  name?: T;
  css?: T;
  js?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  favicon?: T;
  logo?: T;
  localeSwitch?:
    | T
    | {
        enableLocaleHeader?: T;
        enableLocaleFooter?: T;
      };
  siteName?: T;
  homepage?: T;
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
        fax?: T;
      };
  address?:
    | T
    | {
        full_address?: T;
      };
  socialMedia?:
    | T
    | {
        facebook?: T;
        twitter?: T;
        instagram?: T;
        linkedin?: T;
        youtube?: T;
        pinterest?: T;
        tiktok?: T;
        whatsapp?: T;
      };
  createdBy?: T;
  updatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}